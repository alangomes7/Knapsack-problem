#ifndef KNAPSACKWINDOW_H
#define KNAPSACKWINDOW_H

#include "bag.h"
#include "package.h"
#include "dependency.h"
#include "algorithm.h"

#include <QMainWindow>
#include <QString>
#include <vector>

// Forward declaration for the UI class generated by Qt Designer
QT_BEGIN_NAMESPACE
namespace Ui {
class KnapsackWindow;
}
QT_END_NAMESPACE

class KnapsackWindow : public QMainWindow {
    Q_OBJECT

public:
    explicit KnapsackWindow(QWidget *parent = nullptr);
    ~KnapsackWindow();

private slots:
    void onFilePathButtonClicked();
    void onRunButtonClicked();
    void onAlgorithmChanged();

    std::string getAlgorithmLabel(Algorithm::ALGORITHM_TYPE algo,
                              Algorithm::LOCAL_SEARCH ls = Algorithm::LOCAL_SEARCH::NONE);

private:
    void initializeUiElements();
    void setupConnections();
    void loadFile();
    void printPackages();
    void printDependencies();
    void printBag(const std::string& algorithmName);

    Ui::KnapsackWindow *ui;
    Algorithm *m_algorithm;
    int m_bagSize;
    QString m_filePath;
    std::vector<Bag*> m_bags;
    std::unordered_map<std::string, Package*> m_availablePackages;
    std::unordered_map<std::string, Dependency*> m_availableDependencies;
};
#endif // KNAPSACKWINDOW_H